'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports['default'] = setupEnzymeAdapter;

var _object = require('object.assign');

var _object2 = _interopRequireDefault(_object);

var _enzyme = require('enzyme');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function setupEnzymeAdapter() {
  var enzymeOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var adapterOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  var Adapter = void 0;

  try {
    // eslint-disable-next-line import/no-extraneous-dependencies, global-require, import/no-unresolved
    Adapter = require('enzyme-adapter-react-16');
  } catch (R) {
    try {
      // eslint-disable-next-line import/no-extraneous-dependencies, global-require, import/no-unresolved
      Adapter = require('enzyme-adapter-react-16.3');
    } catch (E) {
      try {
        // eslint-disable-next-line import/no-extraneous-dependencies, global-require, import/no-unresolved
        Adapter = require('enzyme-adapter-react-16.2');
      } catch (A) {
        try {
          // eslint-disable-next-line import/no-extraneous-dependencies, global-require, import/no-unresolved
          Adapter = require('enzyme-adapter-react-16.1');
        } catch (r) {
          try {
            // eslint-disable-next-line import/no-extraneous-dependencies, global-require, import/no-unresolved
            Adapter = require('enzyme-adapter-react-15');
          } catch (e) {
            try {
              // eslint-disable-next-line import/no-extraneous-dependencies, global-require, import/no-unresolved
              Adapter = require('enzyme-adapter-react-15.4');
            } catch (a) {
              try {
                // eslint-disable-next-line import/no-extraneous-dependencies, global-require, import/no-unresolved
                Adapter = require('enzyme-adapter-react-14');
              } catch (c) {
                try {
                  // eslint-disable-next-line import/no-extraneous-dependencies, global-require, import/no-unresolved
                  Adapter = require('enzyme-adapter-react-13');
                } catch (t) {
                  throw new Error('It seems as though you donâ€™t have any `enzyme-adapter-react-*` installed. Please install the relevant version and try again.');
                }
              }
            }
          }
        }
      }
    }
  }

  (0, _enzyme.configure)((0, _object2['default'])({
    adapter: new Adapter(adapterOptions)
  }, enzymeOptions));
}
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC5qcyJdLCJuYW1lcyI6WyJzZXR1cEVuenltZUFkYXB0ZXIiLCJlbnp5bWVPcHRpb25zIiwiYWRhcHRlck9wdGlvbnMiLCJBZGFwdGVyIiwicmVxdWlyZSIsIlIiLCJFIiwiQSIsInIiLCJlIiwiYSIsImMiLCJ0IiwiRXJyb3IiLCJhZGFwdGVyIl0sIm1hcHBpbmdzIjoiOzs7OztxQkFFd0JBLGtCOzs7Ozs7QUFGeEI7Ozs7QUFFZSxTQUFTQSxrQkFBVCxHQUFxRTtBQUFBLE1BQXpDQyxhQUF5Qyx1RUFBekIsRUFBeUI7QUFBQSxNQUFyQkMsY0FBcUIsdUVBQUosRUFBSTs7QUFDbEYsTUFBSUMsZ0JBQUo7O0FBRUEsTUFBSTtBQUNGO0FBQ0FBLGNBQVVDLFFBQVEseUJBQVIsQ0FBVjtBQUNELEdBSEQsQ0FHRSxPQUFPQyxDQUFQLEVBQVU7QUFDVixRQUFJO0FBQ0Y7QUFDQUYsZ0JBQVVDLFFBQVEsMkJBQVIsQ0FBVjtBQUNELEtBSEQsQ0FHRSxPQUFPRSxDQUFQLEVBQVU7QUFDVixVQUFJO0FBQ0Y7QUFDQUgsa0JBQVVDLFFBQVEsMkJBQVIsQ0FBVjtBQUNELE9BSEQsQ0FHRSxPQUFPRyxDQUFQLEVBQVU7QUFDVixZQUFJO0FBQ0Y7QUFDQUosb0JBQVVDLFFBQVEsMkJBQVIsQ0FBVjtBQUNELFNBSEQsQ0FHRSxPQUFPSSxDQUFQLEVBQVU7QUFDVixjQUFJO0FBQ0Y7QUFDQUwsc0JBQVVDLFFBQVEseUJBQVIsQ0FBVjtBQUNELFdBSEQsQ0FHRSxPQUFPSyxDQUFQLEVBQVU7QUFDVixnQkFBSTtBQUNGO0FBQ0FOLHdCQUFVQyxRQUFRLDJCQUFSLENBQVY7QUFDRCxhQUhELENBR0UsT0FBT00sQ0FBUCxFQUFVO0FBQ1Ysa0JBQUk7QUFDRjtBQUNBUCwwQkFBVUMsUUFBUSx5QkFBUixDQUFWO0FBQ0QsZUFIRCxDQUdFLE9BQU9PLENBQVAsRUFBVTtBQUNWLG9CQUFJO0FBQ0Y7QUFDQVIsNEJBQVVDLFFBQVEseUJBQVIsQ0FBVjtBQUNELGlCQUhELENBR0UsT0FBT1EsQ0FBUCxFQUFVO0FBQ1Ysd0JBQU0sSUFBSUMsS0FBSixDQUFVLDhIQUFWLENBQU47QUFDRDtBQUNGO0FBQ0Y7QUFDRjtBQUNGO0FBQ0Y7QUFDRjtBQUNGOztBQUVEO0FBQ0VDLGFBQVMsSUFBSVgsT0FBSixDQUFZRCxjQUFaO0FBRFgsS0FFS0QsYUFGTDtBQUlEIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29uZmlndXJlIH0gZnJvbSAnZW56eW1lJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc2V0dXBFbnp5bWVBZGFwdGVyKGVuenltZU9wdGlvbnMgPSB7fSwgYWRhcHRlck9wdGlvbnMgPSB7fSkge1xuICBsZXQgQWRhcHRlcjtcblxuICB0cnkge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tZXh0cmFuZW91cy1kZXBlbmRlbmNpZXMsIGdsb2JhbC1yZXF1aXJlLCBpbXBvcnQvbm8tdW5yZXNvbHZlZFxuICAgIEFkYXB0ZXIgPSByZXF1aXJlKCdlbnp5bWUtYWRhcHRlci1yZWFjdC0xNicpO1xuICB9IGNhdGNoIChSKSB7XG4gICAgdHJ5IHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tZXh0cmFuZW91cy1kZXBlbmRlbmNpZXMsIGdsb2JhbC1yZXF1aXJlLCBpbXBvcnQvbm8tdW5yZXNvbHZlZFxuICAgICAgQWRhcHRlciA9IHJlcXVpcmUoJ2VuenltZS1hZGFwdGVyLXJlYWN0LTE2LjMnKTtcbiAgICB9IGNhdGNoIChFKSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLWV4dHJhbmVvdXMtZGVwZW5kZW5jaWVzLCBnbG9iYWwtcmVxdWlyZSwgaW1wb3J0L25vLXVucmVzb2x2ZWRcbiAgICAgICAgQWRhcHRlciA9IHJlcXVpcmUoJ2VuenltZS1hZGFwdGVyLXJlYWN0LTE2LjInKTtcbiAgICAgIH0gY2F0Y2ggKEEpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLWV4dHJhbmVvdXMtZGVwZW5kZW5jaWVzLCBnbG9iYWwtcmVxdWlyZSwgaW1wb3J0L25vLXVucmVzb2x2ZWRcbiAgICAgICAgICBBZGFwdGVyID0gcmVxdWlyZSgnZW56eW1lLWFkYXB0ZXItcmVhY3QtMTYuMScpO1xuICAgICAgICB9IGNhdGNoIChyKSB7XG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tZXh0cmFuZW91cy1kZXBlbmRlbmNpZXMsIGdsb2JhbC1yZXF1aXJlLCBpbXBvcnQvbm8tdW5yZXNvbHZlZFxuICAgICAgICAgICAgQWRhcHRlciA9IHJlcXVpcmUoJ2VuenltZS1hZGFwdGVyLXJlYWN0LTE1Jyk7XG4gICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby1leHRyYW5lb3VzLWRlcGVuZGVuY2llcywgZ2xvYmFsLXJlcXVpcmUsIGltcG9ydC9uby11bnJlc29sdmVkXG4gICAgICAgICAgICAgIEFkYXB0ZXIgPSByZXF1aXJlKCdlbnp5bWUtYWRhcHRlci1yZWFjdC0xNS40Jyk7XG4gICAgICAgICAgICB9IGNhdGNoIChhKSB7XG4gICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby1leHRyYW5lb3VzLWRlcGVuZGVuY2llcywgZ2xvYmFsLXJlcXVpcmUsIGltcG9ydC9uby11bnJlc29sdmVkXG4gICAgICAgICAgICAgICAgQWRhcHRlciA9IHJlcXVpcmUoJ2VuenltZS1hZGFwdGVyLXJlYWN0LTE0Jyk7XG4gICAgICAgICAgICAgIH0gY2F0Y2ggKGMpIHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby1leHRyYW5lb3VzLWRlcGVuZGVuY2llcywgZ2xvYmFsLXJlcXVpcmUsIGltcG9ydC9uby11bnJlc29sdmVkXG4gICAgICAgICAgICAgICAgICBBZGFwdGVyID0gcmVxdWlyZSgnZW56eW1lLWFkYXB0ZXItcmVhY3QtMTMnKTtcbiAgICAgICAgICAgICAgICB9IGNhdGNoICh0KSB7XG4gICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0l0IHNlZW1zIGFzIHRob3VnaCB5b3UgZG9u4oCZdCBoYXZlIGFueSBgZW56eW1lLWFkYXB0ZXItcmVhY3QtKmAgaW5zdGFsbGVkLiBQbGVhc2UgaW5zdGFsbCB0aGUgcmVsZXZhbnQgdmVyc2lvbiBhbmQgdHJ5IGFnYWluLicpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGNvbmZpZ3VyZSh7XG4gICAgYWRhcHRlcjogbmV3IEFkYXB0ZXIoYWRhcHRlck9wdGlvbnMpLFxuICAgIC4uLmVuenltZU9wdGlvbnMsXG4gIH0pO1xufVxuIl19
//# sourceMappingURL=index.js.map